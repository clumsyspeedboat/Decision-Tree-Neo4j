library("ggplot2")
library("factoextra")
library("FSelector")
library("DescTools")
library("rpart")
library("rpart.plot")
library("C50")
library("RWeka")
data <- file.choose()
data_matrix <- read.csv(data, header = TRUE, sep = ",", na.strings=c("","NA"))
# data_matrix[data_matrix == ""] <- NA
View(data_matrix)
# Selecting necessary columns for Decision Tree Implementation #
data_matrix <- data_matrix[,c(1,3,4,26,32,33,34,35,36,37,42,47,50)]
data_matrix <- data_matrix[,c(2,11,3,4,5,6,7,8,9,10,12,13,1)]
# Information about the variables #
info1_data <- str(data_matrix)
info_data <- as.data.frame.matrix(summary(data_matrix))
# Handling null values in the data set #
data1 <- data_matrix[,1:2]
data2 <- data_matrix[,3:13]
data1[is.na(data1)] <- 0          # for numeric variables
data2[is.na(data2)] <- "unknown"  # for categorical variables
data_matrix <- cbind(data1,data2)
# Transforming Variables #
for (i in 1:2) {
data_matrix[,i] <- as.numeric(data_matrix[,i])
}
for (i in 3:13) {
data_matrix[,i] <- as.factor(data_matrix[,i])
}
View(data_matrix)
TrainingSet = read.csv(file.choose(), header = TRUE, sep = ",")
TestingSet = read.csv(file.choose(), header = TRUE, sep = ",")
View(TrainingSet)
View(TestingSet)
View(data_matrix)
View(data_matrix)
library("ggplot2")
library("caret")
library("factoextra")
library("FSelector")
library("DescTools")
library("rpart")
library("rpart.plot")
library("C50")
library("RWeka")
data <- file.choose()
data_matrix <- read.csv(data, header = TRUE, sep = ",", na.strings=c("","NA"))
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
source('C:/Users/49171/Desktop/Graph-Database-Learning-Algorithms-Neo4j/Dataset 3 - Flu Classification/Decision Tree Codes/(CART_C4.5_C 5.0)_&_Data_Analysis.R', echo=TRUE)
data <- file.choose()
data_matrix <- read.csv(data, header = TRUE, sep = ",", na.strings=c("","NA"))
>>>>>>> Stashed changes
=======
source('C:/Users/49171/Desktop/Graph-Database-Learning-Algorithms-Neo4j/Dataset 3 - Flu Classification/Decision Tree Codes/(CART_C4.5_C 5.0)_&_Data_Analysis.R', echo=TRUE)
data <- file.choose()
data_matrix <- read.csv(data, header = TRUE, sep = ",", na.strings=c("","NA"))
>>>>>>> Stashed changes
# Transforming Variables #
for (i in 1:2) {
data_matrix[,i] <- as.numeric(data_matrix[,i])
}
for (i in 3:13) {
data_matrix[,i] <- as.factor(data_matrix[,i])
}
<<<<<<< Updated upstream
<<<<<<< Updated upstream
=======
=======
>>>>>>> Stashed changes
accuracy1 <- vector("numeric", 30)
time1 <- vector("numeric", 30)
for (i in 1:2) {
options(digits.secs = 6)
start.time1 <- Sys.time()
tree2 <- J48(Diagnosis~., data = data_matrix[,-4])
e <- evaluate_Weka_classifier(tree2, numFolds = 10, class = TRUE)
end.time1 <- Sys.time()
cf <- as.data.frame(as.table(e$confusionMatrix))
a <- sum(cf[1,3],cf[4,3])
b <- sum(cf[1,3],cf[2,3],cf[3,3],cf[4,3])
corrPred = (a/b)*100
accuracy1[i] = corrPred
time_taken1 <- end.time1 -start.time1
time_taken1
time1[i] <- time_taken1
}
sum(accuracy1)/2
sum(time1)/2
accuracy1 <- vector("numeric", 30)
time1 <- vector("numeric", 30)
for (i in 1:2) {
options(digits.secs = 6)
start.time1 <- Sys.time()
tree2 <- J48(Diagnosis~., data = data_matrix)
e <- evaluate_Weka_classifier(tree2, numFolds = 10, class = TRUE)
end.time1 <- Sys.time()
cf <- as.data.frame(as.table(e$confusionMatrix))
a <- sum(cf[1,3],cf[4,3])
b <- sum(cf[1,3],cf[2,3],cf[3,3],cf[4,3])
corrPred = (a/b)*100
accuracy1[i] = corrPred
time_taken1 <- end.time1 -start.time1
time_taken1
time1[i] <- time_taken1
}
sum(accuracy1)/2
sum(time1)/2
data_matrix <- data_matrix[,-4]
View(data_matrix)
write.csv(data_matrix, file = "Flu_Classification1", row.names = TRUE)
write.csv(data_matrix, file = "Flu_Classification1.csv", row.names = TRUE)
write.csv(data_matrix, file = "Flu_Classification1.csv", row.names = FALSE, quote = FALSE)
View(data_matrix)
data_matrix$Age
typeof(data_matrix$Age)
View(data_matrix)
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
# Transforming Variables #
for (i in 1:2) {
data_matrix[,i] <- as.numeric(data_matrix[,i])
}
<<<<<<< Updated upstream
<<<<<<< Updated upstream
for (i in 3:12) {
data_matrix[,i] <- as.factor(data_matrix[,i])
}
accuracy <- vector("numeric", 30)
time <- vector("numeric", 30)
for (i in 1:30) {
options(digits.secs = 6)
start.time1 <- Sys.time()
train.control <- trainControl(method = 'cv', number = 40)
tree1 <- train(Diagnosis ~. ,data = data_matrix, method = "rpart", trControl = train.control, parms=list(split="gini"))
=======
=======
>>>>>>> Stashed changes
for (i in 3:13) {
data_matrix[,i] <- as.factor(data_matrix[,i])
}
for (i in 3:12) {
data_matrix[,i] <- as.factor(data_matrix[,i])
}
write.csv(data_matrix, file = "Flu_Classification1.csv", quote = FALSE, row.names = FALSE)
View(data_matrix)
cat("\f")       # Clear old outputs
rm(list=ls())   # Clear all variables
data1 <- file.choose()
data1
data_matrix <- read.csv(data1, header = TRUE, sep = ",")
accuracy <- vector("numeric", 30)
time <- vector("numeric", 30)
accuracy = 0
time = 0
for (i in 1:30) {
options(digits.secs = 6)
start.time1 <- Sys.time()
train.control <- trainControl(method = 'cv', number = 10)
tree1 <- train(Patient.Type ~. ,data = data_matrix, method = "rpart", trControl = train.control, parms=list(split="gini"))
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
end.time1 <- Sys.time()
plot(tree1)
Prediction1 <- confusionMatrix(tree1)
print(Prediction1)
cf <- as.data.frame(as.table(Prediction1$table))
corrPred = sum(cf[1,3],cf[4,3])
accuracy[i] = corrPred
time_taken1 <- end.time1 -start.time1
time_taken1
time[i] <- time_taken1
}
sum(accuracy)/30
sum(time)/30
<<<<<<< Updated upstream
<<<<<<< Updated upstream
accuracy1 <- vector("numeric", 30)
time1 <- vector("numeric", 30)
for (i in 1:30) {
options(digits.secs = 6)
start.time1 <- Sys.time()
tree2 <- J48(Diagnosis~., data = data_matrix)
e <- evaluate_Weka_classifier(tree2, numFolds = 40, class = TRUE)
end.time1 <- Sys.time()
cf <- as.data.frame(as.table(e$confusionMatrix))
a <- sum(cf[1,3],cf[4,3])
b <- sum(cf[1,3],cf[2,3],cf[3,3],cf[4,3])
corrPred = (a/b)*100
accuracy1[i] = corrPred
time_taken1 <- end.time1 -start.time1
time_taken1
time1[i] <- time_taken1
}
sum(accuracy1)/30
sum(time1)/30
=======
=======
>>>>>>> Stashed changes
accuracy <- vector("numeric", 30)
time <- vector("numeric", 30)
accuracy = 0
time = 0
for (i in 1:30) {
options(digits.secs = 6)
start.time1 <- Sys.time()
train.control <- trainControl(method = 'cv', number = 10)
tree1 <- train(Patient_Type ~. ,data = data_matrix, method = "rpart", trControl = train.control, parms=list(split="gini"))
end.time1 <- Sys.time()
plot(tree1)
Prediction1 <- confusionMatrix(tree1)
print(Prediction1)
cf <- as.data.frame(as.table(Prediction1$table))
corrPred = sum(cf[1,3],cf[4,3])
accuracy[i] = corrPred
time_taken1 <- end.time1 -start.time1
time_taken1
time[i] <- time_taken1
}
sum(accuracy)/30
sum(time)/30
accuracy <- vector("numeric", 30)
time <- vector("numeric", 30)
accuracy = 0
time = 0
for (i in 1:30) {
options(digits.secs = 6)
start.time1 <- Sys.time()
train.control <- trainControl(method = 'cv', number = 20)
tree1 <- train(Patient_Type ~. ,data = data_matrix, method = "rpart", trControl = train.control, parms=list(split="gini"))
end.time1 <- Sys.time()
plot(tree1)
Prediction1 <- confusionMatrix(tree1)
print(Prediction1)
cf <- as.data.frame(as.table(Prediction1$table))
corrPred = sum(cf[1,3],cf[4,3])
accuracy[i] = corrPred
time_taken1 <- end.time1 -start.time1
time_taken1
time[i] <- time_taken1
}
sum(accuracy)/30
sum(time)/30
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
library("ggplot2")
library("caret")
library("factoextra")
library("FSelector")
library("DescTools")
library("rpart")
library("rpart.plot")
library("C50")
library("RWeka")
cat("\f")       # Clear old outputs
rm(list=ls())   # Clear all variables
library("ggplot2")
library("caret")
library("factoextra")
library("FSelector")
library("DescTools")
library("rpart")
library("rpart.plot")
library("C50")
library("RWeka")
data <- file.choose()
data_matrix <- read.csv(data, header = TRUE, sep = ",", na.strings=c("","NA"))
for (i in 1:2) {
data_matrix[,i] <- as.numeric(data_matrix[,i])
}
for (i in 3:12) {
data_matrix[,i] <- as.factor(data_matrix[,i])
}
accuracy = vector("numeric")
time = vector("numeric")
mcc = vector("numeric")
cf = matrix("numeric")
for (i in 1:30) {
options(digits.secs = 6)
start.time1 <- Sys.time()
train.control <- trainControl(method = 'cv', number = 20)
tree1 <- train(Diagnosis ~. ,data = data_matrix, method = "rpart", trControl = train.control, parms=list(split="gini"))
end.time1 <- Sys.time()
Prediction1 <- confusionMatrix(tree1)
print(Prediction1)
cf <- as.data.frame(as.table(Prediction1$table))
tp <- cf[1,3]
tn <- cf[4,3]
fp <- cf[3,3]
fn <- cf[2,3]
corrPred = (tp+tn)/(tp+tn+fp+fn)
accuracy[i] = corrPred/100
mccNum <- (tp*tn)-(fp*fn)
mccDen <- sqrt((tp+fp)*(tp+fn)*(tn+fp)*(tn+fn))
numMcc <- mccNum/mccDen
mcc[i] = numMcc
time_taken1 <- end.time1 -start.time1
time_taken1
time[i] <- time_taken1
}
sum(accuracy)/30
sum(time)/30
sum(mcc)/30
mean(accuracy)
